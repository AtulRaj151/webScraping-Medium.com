{"version":3,"sources":["reducer/blogs.js","reducer/index.js","action/actionTypes.js","component/BlogsCard.js","action/blogs.js","component/Navbar.js","component/App.js","index.js","store/index.js"],"names":["initialSearchState","result","tags","showSearchResults","combineReducers","blogs","state","action","type","BlogsCard","this","props","blog","tag","className","title","creater","readingTime","date","Component","fetchBlogs","dispatch","url","fetch","then","response","json","data","updateBlogs","arr","Navbar","handleSearchQuestion","e","document","getElementById","value","length","console","log","id","placeholder","onClick","connect","App","map","index","key","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"wRAGMA,EAAqB,CACzBC,OAAQ,GACRC,KAAM,GACNC,mBAAmB,GCJNC,kBAAgB,CAC7BC,MDKa,WAAqD,IAArCC,EAAoC,uDAA5BN,EAAoBO,EAAQ,uCACjE,OAAQA,EAAOC,MACb,IEV2B,kBFWzB,OAAO,2BACFF,GADL,IAEEL,OAAQM,EAAOF,MACfH,KAAMK,EAAOL,OAEjB,QACE,OAAOI,M,gCGaEG,E,uKA3BH,IAAD,EACeC,KAAKC,MAAnBC,EADD,EACCA,KAAMC,EADP,EACOA,IACd,OACE,6BACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,SACA,yBAAKA,UAAU,iBAAf,YACA,yBAAKA,UAAU,aAAf,eACA,yBAAKA,UAAU,aAAf,QACA,yBAAKA,UAAU,aAAf,SAGF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAASF,EAAKG,OAC7B,yBAAKD,UAAU,wBAAwBF,EAAKI,SAC5C,yBAAKF,UAAU,wBAAwBF,EAAKK,aAC5C,yBAAKH,UAAU,wBAAwBF,EAAKM,MAE5C,yBAAKJ,UAAU,UAAUD,U,GApBbM,aCDjB,SAASC,EAAWlB,GACzB,OAAO,SAACmB,GAEN,IAAIC,EAAG,qDAAiDpB,GACxDqB,MAAMD,GACHE,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAKLN,EAKD,SAAqBhB,EAAOH,GACjC,MAAO,CACLM,KFrB2B,kBEsB3BH,QACAH,QATa0B,CAAYD,EAAKE,IAAIF,KAAMzB,Q,ICVtC4B,E,4MACJC,qBAAuB,SAACC,GACtB,IAAI9B,EAAO+B,SAASC,eAAe,cAAcC,MAC7B,IAAhBjC,EAAKkC,QAIT,EAAKzB,MAAMU,SAASD,EAAWlB,K,uDAK/B,OADAmC,QAAQC,IAAI,SAAU5B,KAAKC,OAEzB,yBAAKG,UAAU,OACb,4BACEyB,GAAG,WACHzB,UAAS,4CAFX,oBAMA,yBAAKA,UAAU,oBACb,2BAAOyB,GAAG,aAAaC,YAAY,2BACnC,4BAAQD,GAAG,aAAaE,QAAS/B,KAAKqB,sBAAtC,gB,GAtBWZ,aAoCNuB,mBALf,YACE,MAAO,CACLrC,MAFgC,EAATA,SAKZqC,CAAyBZ,GClClCa,E,uKACM,IAAD,EACkBjC,KAAKC,MAAMN,MAA5BJ,EADD,EACCA,OAAQC,EADT,EACSA,KAIhB,OAFAmC,QAAQC,IAAI,YAAarC,GAGvB,6BACE,kBAAC,EAAD,MAEmB,IAAlBA,EAAOmC,OACNnC,EAAO2C,KAAI,SAAChC,EAAMiC,GAAP,OACT,kBAAC,EAAD,CAAWjC,KAAMA,EAAMC,IAAKX,EAAM4C,IAAG,eAAUD,QAGjD,mF,GAfQ1B,aA4BHuB,mBANf,SAAwBpC,GACtB,MAAO,CACLD,MAAOC,EAAMD,SAIFqC,CAAwBC,GC5BjCI,ECEIC,YAAYC,EAASC,YAAgBC,IAAOC,MDAtDf,QAAQC,IAAIS,GACZM,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,QAGJtB,SAASC,eAAe,W","file":"static/js/main.7983021a.chunk.js","sourcesContent":["import { UPDATE_QUESTION } from \"../action/actionTypes\";\r\n\r\n// reducer for search results\r\nconst initialSearchState = {\r\n  result: [],\r\n  tags: \"\",\r\n  showSearchResults: false,\r\n};\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_QUESTION:\r\n      return {\r\n        ...state,\r\n        result: action.blogs,\r\n        tags: action.tags,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport blogs from \"./blogs\";\r\nexport default combineReducers({\r\n  blogs,\r\n});\r\n","export const UPDATE_QUESTION = \"UPDATE_QUESTION\";\r\n","import React, { Component } from \"react\";\r\n\r\nclass BlogsCard extends Component {\r\n  render() {\r\n    const { blog, tag } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"q-card\">\r\n          <div className=\"left\">\r\n            <div className=\"left-topic\">Title</div>\r\n            <div className=\"left-question\">Author:-</div>\r\n            <div className=\"left-tags\">ReadingTime</div>\r\n            <div className=\"left-tags\">date</div>\r\n            <div className=\"left-tags\">Tags</div>\r\n          </div>\r\n\r\n          <div className=\"right\">\r\n            <div className=\"topic\">{blog.title}</div>\r\n            <div className=\"question-description\">{blog.creater}</div>\r\n            <div className=\"question-description\">{blog.readingTime}</div>\r\n            <div className=\"question-description\">{blog.date}</div>\r\n\r\n            <div className=\"footer\">{tag}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogsCard;\r\n","import { UPDATE_QUESTION } from \"./actionTypes\";\r\nexport function fetchBlogs(tags) {\r\n  return (dispatch) => {\r\n    // let url = `http://localhost:8000/scrap/${tags}`;\r\n    let url = `https://webscrapmedium.herokuapp.com/scrap/${tags}`;\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // disptach the fetched qustions\r\n\r\n        // console.log(data.arr.data);\r\n\r\n        dispatch(updateBlogs(data.arr.data, tags));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateBlogs(blogs, tags) {\r\n  return {\r\n    type: UPDATE_QUESTION,\r\n    blogs,\r\n    tags,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBlogs } from \"../action/blogs\";\r\n\r\nclass Navbar extends Component {\r\n  handleSearchQuestion = (e) => {\r\n    let tags = document.getElementById(\"search-box\").value;\r\n    if (tags.length === 0) {\r\n      //  show notifications\r\n      return;\r\n    }\r\n    this.props.dispatch(fetchBlogs(tags));\r\n  };\r\n\r\n  render() {\r\n    console.log(\"NAVBAR\", this.props);\r\n    return (\r\n      <div className=\"nav\">\r\n        <button\r\n          id=\"home-btn\"\r\n          className={`btn btn-light btn-outline-dark btn-block`}\r\n        >\r\n          Scrap Medium.com\r\n        </button>\r\n        <div className=\"search-container\">\r\n          <input id=\"search-box\" placeholder=\"Search Blogs by Tag...\" />\r\n          <button id=\"search-btn\" onClick={this.handleSearchQuestion}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapPropsTostate({ blogs }) {\r\n  return {\r\n    blogs,\r\n  };\r\n}\r\nexport default connect(mapPropsTostate)(Navbar);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport BlogsCard from \"./BlogsCard\";\nimport Navbar from \"./Navbar\";\n\nclass App extends Component {\n  render() {\n    const { result, tags } = this.props.blogs;\n\n    console.log(\"BLOOGOOGb\", result);\n\n    return (\n      <div>\n        <Navbar />\n\n        {result.length !== 0 ? (\n          result.map((blog, index) => (\n            <BlogsCard blog={blog} tag={tags} key={`blog-${index}`} />\n          ))\n        ) : (\n          <h2>Search a Tag / tags are empty / not found ....</h2>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapToPropState(state) {\n  return {\n    blogs: state.blogs,\n  };\n}\n\nexport default connect(mapToPropState)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport { configureStore } from \"./store\";\nimport App from \"./component/App\";\nconst store = configureStore();\n\nconsole.log(store);\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"../reducer\";\r\n\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}